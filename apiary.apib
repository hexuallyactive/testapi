FORMAT: X-1A

# gmi-presenter
GMI Toolbox API

# Group Mode
Center Mode control

## Mode Collection [/modes]
### List all Assets [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Welcome"
        }, {
          "id": 2, "name": "Presentation"
        },
          "id": 3, "name": "Break"
        ]
  
## Mode Select [/mode/id/{id}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Mode to perform action with.

### Set Mode Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group External Sources
External Sources control

## External Sources Collection [/sources]
### List all Feeds [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Left Arc Exterior", "type": "primary"
        }, {
          "id": 2, "name": "Left Arc Interior", "type": "primary"
        }, {
          "id": 3, "name": "Center", "type": "primary"
        }, {
          "id": 4, "name": "Right Arc Interior", "type": "primary"
        }, {
          "id": 5, "name": "Right Arc Exterior", "type": "primary"
        }, {
          "id": 6, "name": "Participant Tablet", "type": "primary"
        }, {
          "id": 7, "name": "Beacon", "type": "secondary"
        }, {
          "id": 8, "name": "Learn and Share Table", "type": "secondary"
        }, {
          "id": 9, "name": "Conference Room 1", "type": "secondary"
        }, {
          "id": 10, "name": "Conference Room 2", "type": "secondary"
        }, {
          "id": 11, "name": "Kitchen", "type": "secondary"
        }, {
          "id": 12, "name": "Virtual Store", "type": "secondary"
        }
        ]

## External Source Command [/source/id/{id}/command/{command}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Mode to perform action with.
    + command (required, string, ``) ... String `command` accepts `prev` and `next`
    
### Set Feed Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group Feed
Feed control

## Feed Collection [/feeds]
### List all Feeds [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Test Feed"
        }]
  
## Feed Select [/feed/id/{id}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Mode to perform action with.

### Set Feed Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group Visits
Visit related resources of the **Visits API**

## Visits Collection [/visits]
### List all Visits [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Visit 1"
        }, {
          "id": 2, "name": "Visit 2"
        }]
            
## Visit [/visit/id/{id}]
A single Visit object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Visit to perform action with.

### Retrieve a Visit [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "need mock data..." }
            
# Group Panorama
Panorama application control

## Panorama Collection [/panoramas]

### List all Panoramas [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Panorama 1"
        }, {
          "id": 2, "name": "Panorama 2"
        }]
  
## Panorama Command [/panorama/id/{id}/command/{command}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Panorama to perform action with.
    + command (required, string, ``) ... String `command` accepts `activate`, `close`

### Set Panorama Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group Consumer Insight
Consumer Insight application control

## Consumer Insight Collection [/insights]
### List all Consumer Insights [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "Insight 1"
        }, {
          "id": 2, "name": "Insight 2"
        }]
  
## Consumer Insight Command [/insight/id/{id}/command/{command}]   

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Consumer Insight to perform action with.
    + command (required, string, ``) ... String `command` accepts `activate`, `prev` and `next`
    
### Set Consumer Insight Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group Assets
Asset control

## Asset Collection [/assets]
### List all Assets [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "name": "this will be a tree representation"
        }]
  
## Asset Select [/asset/{id}/command/select]      
### Set Consumer Insight Active [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

## Asset Move [/asset/id/{id}/command/move/display/{displayid}]      
### Close Active Panorama [PUT]
+ Response 200 (application/json)
    + Body
    
            { "status": "ok" }

# Group Presentations
Presentation related resources of the **Presentation API**

## Presentations Collection [/presentations]
### List all Presentations [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "title": "p1"
        }, {
          "id": 2, "title": "p2"
        }]
            
## Presentation [/presentation/{id}]
A single Presentation object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Presentation to perform action with.

### Retrieve a Presentation [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": 2, "title": "Pick-up posters from post-office" }


